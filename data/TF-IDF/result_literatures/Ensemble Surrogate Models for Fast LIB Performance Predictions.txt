Battery Cell design and control have been widely explored through modeling and simulation. On the one hand, Doyle’s pseudo-two-dimensional (P2D) model and Single Particle Models are among the most popular electrochemical models capable of predicting battery performance and therefore guiding cell characterization. On the other hand, empirical models obtained, for example, by Machine Learning (ML) methods represent a simpler and computationally more efficient complement to electrochemical models and have been widely used for Battery Management System (BMS) control purposes. 
This article proposes ML-based ensemble models to be used for the estimation of the performance of an LIB cell across a wide range of input material characteristics and parameters and evaluates 1. Deep Learning ensembles for simulation convergence classification and 2. structured regressors for battery energy and power predictions. The results represent an improvement on state-of-the-art LIB surrogate models and indicate that deep ensembles represent a promising direction for battery modeling and design.
This paper considers the task of estimating the energy and power density of LIB designs across a range of characteristics and parameters and focuses on the problem of obtaining these results without incurring the considerable computational costs of detailed physical simulations in a recurrent manner. While state-of-the-art contributions such as  exploit Deep Learning neural networks trained on simulated data as surrogate models for this objective, to the best of our knowledge, no literature contribution yet has evaluated the performance of so called ensemble models for this task. We address this gap in the literature by comparing state-of-the-art models with a number of ensemble surrogates.
Even though Lithium-Ion Batteries (LIB) have progressively been improved since their market introduction in 1991 by Sony, their massive deployment requires them to be further optimized in terms of performance, durability, and safety. From the physical point of view, to obtain these results, in the battery design phase, it is important to reduce limitations to ion transport, thus avoiding undesirable cell polarization effects. 
Consequently, an extensive literature describes the effect each design parameter has on transport mechanisms, and therefore on cell performance. On the one hand, the effects of several parameters (including electrode thickness, particle size, tortuosity and discharge rate) have been investigated by experimental methods. On the other hand, cell design has also been explored through modeling approaches, demonstrating that model-based design can be used to reduce the number of experiments, while accurately describing battery performance and providing guidance for battery characterization.
In general, the battery models presented in the literature mainly fall into two categories: physics-based electrochemical models and empirical ones. In addition, the recent development of physics-based equivalent circuit models aims to combine the high accuracy of physical models with the reduced computational cost of empirical ones.
 Physics-based electrochemical models [2–4] use partial differential equations to describe the phenomena taking place within the battery. They can be used to forecast its electrochemical state, and to provide accurate information about variables such as lithium concentrations and over-potentials, which can be used to understand the phenomena that are limiting performance or durability. For example, the widely used Pseudo-two Dimensional (P2D) electrochemical model developed by Doyle and Newman [5,6] is based on porous electrode theory, concentrated solution theory, and kinetics equations.
Further electrochemical modeling approaches rely on Single Particle (SP) simplifications, in which the properties of the electrolyte are normally ignored [7–9]. Further recent approaches such as SPMe [10] consider electrolyte dynamics in SP models. Other possibilities include Simplified Models building on polynomial profiles [11,12], Galerkin approximations [13], transfer function modeling [14], and the like. Concerning limitations, a drawback of detailed electrochemical models is the significant computational cost of simulations [15]. To overcome this limitation, various reduced-order models have been developed, which are either distributed-parameter models [10,13] or lumped-parameters models [14,16]. Distributed-parameter models are normally expressed in the form of ordinary differential algebraic equations (DAEs), derived, for example, using the Galerkin projection methods or Proper Orthogonal Decomposition, trying to preserve the physical meaning of all model parameters. Lumped-parameter models, which m 
mic the output voltage of the battery using electrical components such as resistors and capacitors, are described below.
Empirical models are typically either based on equivalent circuits [16,17] or on data driven approaches [18,19]. battery control algorithm rather than in cell design optimization applications. They are composed of an open-circuit voltage source connected to a set of electric elements, such as resistors and capacitors, to model the electrical behavior of a battery. While these models are intuitive and relatively simple to use in control system design and implementation, they do not provide insights on the internal behavior of the battery. In this regard, new approaches have recently been explored, such as the developed distributed parameter ECMs [20,21], in which the models are normally expressed in the form of DAEs, which can be solved rapidly using the proposed method with high accuracy. 
This represents an improvement on existing physics-based Li-ion battery models, especially in real time, dynamic environments. Physics-based equivalent circuit models combine the benefits of high accuracy physical models with the lower computational cost of empirical ones, for instance, by combining a concise transmission line structure with partial differential equations for the mass transport processes that describe the concentration distributions and that are solved with the finite difference method, avoiding simplifications or approximations, thus guaranteeing the accuracy of the results [20]. Online estimation and prediction of the Remaining Useful Life also often use data-driven empirical methods which, however, have not been commonly exploited for cell design purposes.
So-called ‘surrogate’ models are obtained by Machine Learning methods from data generated by simulations. Once the training phase is completed, these models can provide estimations of battery performance indicators with a lower computational cost and with an accuracy similar to that of physical simulators. Probabilistic surrogate models are often used for optimization: by running the simulations at a set of points (experimental design), one obtains fast surrogates for otherwise expensive objective functions. In methods such as Upper and Lower Confidence Bound , Expected Improvement [24], DYCORS [25], and SOP [26], the optimization jointly performs both exploration and exploitation, looking for an optimum, while, at the same time, sampling by simulation the most uncertain parameter regions. 
In this sense, surrogate optimization schemes can efficiently leverage the ability of probabilistic surrogate model classes, from Gaussian Processes to Sequential Radial Basis Functions, to jointly generate estimates for both the local value and the local uncertainty of an objective function of interest. Relevant efforts for LIB aging modeling include those based on Gaussian processes by Liu et al.
Contributing to the domain of such surrogates, Wu et al. propose to address cell design characterization by combining Machine Learning classifiers and regressors based on deep feed-forward neural network models. While the first neural network is a classifier that predicts whether a set of input design variables would result in a physically realizable cell, the second neural network estimates the specific energy and specific power of the design. Both neural networks are trained and validated using data from finite-element, thermo-electrochemical simulations.
Although ensemble models are well represented in the literature, to the best of our
knowledge, no contribution yet has evaluated their performance as surrogates of physical LIB simulators. This paper addresses this gap by comparing a state-of-the-art LIB surrogate model based on deep feed-forward networks with a set of ensemble models integrating deep classifiers and regressors. 
In this sense, we demonstrate the accuracy of composite surrogate models for the estimation of the density of power and energy of a given LIB parameter set. The input and output parameters taken into consideration for the electrochemical simulations are listed in Table 1. Their values are measured by proprietary electrochemical and physicochemical protocols for a set of proprietary electrodes in CIDETEC, and vary between the minimum and maximum values shown in Table 1.
In terms of application, the present paper does not directly focus on optimization.
Instead, as also previously done in , it considers surrogates that can be used to estimate the performance of battery designs across a wide range of material characteristics and parameters. This applicative objective reduces the importance of using surrogate models that can output estimated values and their uncertainties, for instance by exploiting techniques such as Monte Carlo Dropout and Variational Inference . Consequently, in the rest of our treatment, we limit ourselves to non-probabilistic surrogates.
The methodology we introduce and detail in the sections below is based on the general framework put forward by [32,33], integrating and extending the Pseudo-2D surrogate proposed by [1] to evaluate the performance of composite surrogate models integrating both classification and regression. Through classification, a Machine Learning model evaluates the convergence of the simulator, while, through regression, the algorithms predict the output parameters of the Ragone plot [34] (energy and power, as per Figure 1).
We extend the state of the art in [1] by showing the advantage of adopting respectively ensemble methods for convergence classification and structured regression for the estimation of the Ragone parameters, rather than simpler feed-forward networks for both tasks. Furthermore, from the methodological point of view, we apply a quantitative performance evaluation proce-dure that is based on K-fold validation [35] rather than on simple train/test/validation splitting as in [1]. The accuracy of some of the ensemble surrogate models we introduce compares favorably to that of the state-of-the-art method introduced in [1]. Furthermore, the approach in the reference is extended by using a K-fold cross-validation method to evaluate if the model can generalize the quality of its results.
The construction and validation of the P2D-based surrogate model have involved several steps:• Selection of the appropriate input and output parameters. In this regard, measurable electrode and electrolyte transport properties are selected as input parameters, while the parameters of the very-well known Ragone plot (energy and power) are selected as outputs to be used for battery characterization purposes, as shown in Table 1, where the minimum and maximum values for each of the parameters are also reported. • Selection of electrochemical model and Design of Experiments. A proprietary P2D model is used to generate the data set. • Development of surrogate models. Each surrogate is composed of three models: a binary simulation convergence classifier and two separate regression models that estimate integrated power and energy density values from the input parameters (see Figure 2). • Model validation, typically carried out similarly as for the data-driven models.
The electrochemical model used for building the data-set is expressed in terms of four conservation relations described in Smith et al. [36] by partial differential equations and their corresponding boundary conditions. The numerical approach considered for solving the system of equations is based on Finite Elements Methods (FEM) for space-discretization as implemented in the open-source FEniCS toolkit (https://fenicsproject.org/, accessed on 8 May 2021), and on Implicit Euler methods for time-discretization.
As in Wu et al. [1], in this paper, we focus on the variables that are controllable during battery manufacturing. Among all the design variables, the electrode thickness, porosity, and particle radius are chosen because they can be controlled within the material or the electrode manufacturing steps. For example, electrode thickness and porosity can be experimentally adjusted during the calendering step of the cell manufacturing process. Separator thickness and porosity ranges are defined considering commercially available components.
In addition, the initial electrolyte concentration and ionic conductivity arefurther important tunable variables and are considered as they play an important role in determining thick electrode performance limitations due to the dry-out of the electrolyte. When it comes to the electrolyte, two parameters are selected for the design of experiments. First, the ionic conductivity (ke) is selected as it can be modulated by doping salts, acids, metals, alkali, etc. to the solvent matrix and the initial salt concentration for a similar reason (i.e., c0).
For the sake of simplicity, we have assumed that the ionic conductivity
has no dependence on the electrolyte concentration. In further developments, we envision that this dependency will be taken into account. Finally, the applied C-rate is also selected as an input variable, as this parameter may vary from very low values to very high ones depending on the battery application. Constant–current discharge protocols are used as a baseline, with the aim of the characterization of the cell in terms of energy and power during discharge. 
Considering the previous inputs, we generate a simulated data set by running a P2D model implemented in Python. As previously mentioned, simulations consider a given set of input parameter values. They propagate a set of variables describing the electrochemical status of the battery up to a well-defined and fixed time limit. 
Reasons for failures in simulating up to the specified end time include reaching physically meaningless or non-realizable situations, such as negative values for ion concentrations. In these cases, the run will stop prematurely, producing only partial estimates for the above Ragone integrals, and appropriately setting a negative convergence status flag
We generate a surrogate model to reproduce the results of the P2D model simulator. Once trained, this empirical model can approximate simulation results in a fraction of the running time of the physical simulator, keeping the approximation errors under control. The input parameters taken into account correspond to the inputs of simulations. As previously mentioned, the output variables include the convergence status of the simulation, and the Ragone plot variables corresponding to energy and power integrals. 
The proposed surrogate model structure is a composite one: the convergence status is modeled by a binary classifier (Section 2.2.1) and the energy and power output integrals are approximated by regressors (Section 2.2.4).
We consider that, in a Pseudo-2D electrochemical model, the completion status of a simulation can either be full (corresponding to propagation up to the intended completetemporal extension) or partial (corresponding to early termination). This status can depend on several phenomena with varying degrees of complexity. Those phenomena range from the consumption of chemical species to variations in the separator/electrode interface resistance due to parasitic ion deposition and layering reactions. Modeling the range of phenomena involved requires adding flexibility to the surrogate model. To that end, we combine the prediction capabilities of committees of ML classifiers by using ensemble methods [37].
The key hypothesis is that, by exploiting extended ensembles of classifiers, we can implicitly learn about the different mechanisms that can stop the execution of the simulator. The resulting composite models can then better reproduce the varying degrees of complexity of the physical phenomena that lead a simulation to an early stop, thereby improving on state-of-the-art approaches such as the one in [1].
To evaluate this hypothesis, we compare a single feed-forward network (indicated by the ‘single’ label in subsequent tables and diagrams), corresponding to the state of the art in [1], to a set of ensemble binary classifiers based on different approaches: a voting ensemble composing a small number of tree-based classifiers (‘voting’), an efficient Gradient Boosting ensemble implementation (‘xgboost’), and a stacking ensemble of models including feed-forward networks (‘stacking’). The list of classifiers is in Table 3.
We start by establishing a baseline for the performance of convergence estimators, by considering a deep learning classifier as per the state of the art in [1], as a reference against which the performance of the rest of the models can be quantitatively evaluated. To that end, we define a fully connected network with a single hidden layer, considering a log-entropy loss function suited for classification [38], and an ADAMW optimizer [39] to address possible weight decay issues [40]. The limited structural complexity of the network corresponds to the results published in the literature.
We build a first ensemble classifier by combining three simple models. The combination operates by basic voting among level-1 members, listed in Table 4. We describe them briefly. A pruned decision tree is one in which sections that are not critical to reducing an empirical loss function are iteratively eliminated. The pruning operates by considering the Minimum Description Length principle to reduce the risk of over-fitting [41]. The second type of level-1 model is a decision stump, a basic single-level decision tree [42]. The third type of level-1 model considered is a random forest, in itself an ensemble of decision trees [43] that outputs the mode of the output of the trees that compose it.
We then consider a Gradient Boosting implementation in XGBoost [44]. This specific model is selected on account of its flexibility and of the robustness of available implementations, which draw on efficient linear model solvers and effective tree learning algorithms. We complete the set of classifiers by taking into account a further model ensemble that includes instances of the feed-forward network. In this last case, the stacking is performed by a second-level classifier that takes as input the outputs of the first-level classification models that compose the committee. In this sense, the predictions of the first-level models are combined by an ensemble bagging/boosting combination mechanism that is based on a ‘stacking’ second-level classifier.
The models considered in the set are listed in Table 5. The three level-1 instances of the feed-forward network in the ensemble are similar in structure yet independent of one another, in the sense that they are independently trained on non-overlapping subsets of the data set.
Simulated data consists of 11 input and 3 output attributes, as detailed in Table 1. The outputs are not temporally located, since they represent the integration of the state of a simulation that is successfully extended until a given time limit. Concerning the available data and parameter measurements, we observe that uncertainties from sensors and experimental measurements are not considered at this stage. 
We believe that sensor noises are more critical in BMS development, as they could have a big impact on the performance of the numerical algorithms used to estimate the state variables. They can be incorporated in treatments such as the present one by e.g., Variational Inference techniques, modifying the output layers of the network architectures considered and the loss functions specified.
We partition the data set into separate training, testing and validation sets by 60/20/20% stratified sampling without replacement. Consequently, the distribution of the simulation convergence status is preserved in the generated sets. The data points from each set are shown in Figure 4. We use K-fold validation [35] as a strategy for the measurement of performance of the classification methods, with the K parameter set to 8. The input variables are normalized by a Z-score transformation in the preprocessing step. The randomized data are organized in batches of 32 samples to speed up the learning [45,46]. While the validation subset is fixed, the train/test split varies by k ∈ {1 . . . K} in the K-fold validation procedure. The values of the input simulation parameters tend to be uniformly distributed in the input data set, with a maximum absolute value of the Pearson correlation between variables around 0.19.
To establish baseline results, we first consider a state-of-the-art single fully connected feed-forward network as in [1]. The hyper-parameters for the surrogate are summarized in Table 6. The number of epochs is experimentally limited to 15, observing the convergence plots produced during the learning phase. As a consequence of the limited number of training epochs, training time is limited to five seconds on a single Intel i7-8550U CPU device running at 1.80 GHz. Though a GPU can be used as a learning device, the fast convergence of the learning procedure means that learning directly on the CPU is practically usable. The Confusion Matrix for the single feed-forward network for simulation convergence estimation as trained with the whole training/testing set and measured on the validation set is reported in Table 7. The results for this fully connected deep classifier are included and compared in Figure 5.
Finally, we consider an ensemble convergence model operating by a second-level
classifier stacking the results obtained by first-level classifiers as per Section 2.2.1. The Confusion Matrix for the stacking ensemble simulation convergence model is reported in Table 7. The performance for the simulator convergence prediction of the stacking ensemble model is again reported in Figure 5.
The present contribution has introduced and evaluated composite surrogate models for the prediction of the performance of Lithium-Ion Batteries which combine classifiers based on deep ensembles and structured regressors for the prediction of energy and power densities. We have compared a single state-of-the-art feed-forward network to three types of ensemble binary classifiers for the prediction of simulation convergence. The quantitative results obtained indicate that ensemble models can indeed outperform state of the art models based on a single deep network.
Furthermore, we have quantitatively validated the applicability of structured regressors to the estimation of LIB energy and power. Future work to be considered includes analyzing feature and parameter sensitivities [50] and the use of ML explainability/interpretability methods to ensemble models from an electrochemical perspective. Furthermore, model and data uncertainty management [51,52] should also be analyzed: the quantification of the risk from different sources is valuable for the real-world applicability of the developed methodology.
